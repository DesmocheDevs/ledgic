generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String   @id @default(uuid())
  nombre    String
  apellido  String
  cedula    String   @unique
  numero    String?
  correo    String   @unique
  direccion String
  sexo      Sexo
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cedula])
  @@index([correo])
  @@map("clients")
}

model Inventory {
  id           String           @id @default(uuid())
  nombre       String
  categoria    String
  estado       EstadoInventario
  unidadMedida String           @map("unidad_medida") @db.VarChar(50)
  proveedor    String?
  tipo         String?
  createdAt    DateTime         @default(now()) @map("creado")
  updatedAt    DateTime         @updatedAt @map("actualizado")
  materials    Material[]

  @@index([categoria])
  @@index([estado])
  @@map("inventory")
}

model Material {
  id                  String                @id @default(uuid())
  precioCompra          Decimal               @db.Decimal(10, 2)
  proveedor             String?
  cantidadActual        Decimal?              @db.Decimal(10, 2)
  valorTotalInventario  Decimal?              @db.Decimal(10, 2)
  costoPromedioPonderado Decimal?              @db.Decimal(10, 2)
  inventarioId          String                @map("inventario_id")
  createdAt           DateTime              @default(now()) @map("creado")
  updatedAt           DateTime              @updatedAt @map("actualizado")
  inventario          Inventory             @relation(fields: [inventarioId], references: [id], onDelete: Cascade)
  products            ProductMaterial[]
  registro_produccion registro_produccion[]

  @@index([inventarioId])
  @@map("materials")
}

model ProductMaterial {
  productId    String   @map("product_id")
  materialId   String   @map("material_id")
  cantidad     Decimal  @db.Decimal(12, 4)
  unidadMedida String?  @db.VarChar(50)
  material     Material @relation(fields: [materialId], references: [id])
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([productId, materialId])
  @@map("product_materials")
}

model Product {
  id          String            @id @default(uuid())
  nombre      String
  descripcion String?
  precio      Decimal           @db.Decimal(10, 2)
  categoria   String?
  createdAt   DateTime          @default(now()) @map("creado")
  updatedAt   DateTime          @updatedAt @map("actualizado")
  materials   ProductMaterial[]

  @@index([categoria])
  @@map("products")
}

model registro_produccion {
  id            String   @id
  lote_id       String
  material_id   String
  cantidad      Decimal  @db.Decimal(10, 2)
  costoUnitario Decimal  @db.Decimal(10, 2)
  costoTotal    Decimal  @db.Decimal(10, 2)
  fecha         DateTime @default(now())
  materials     Material @relation(fields: [material_id], references: [id], onDelete: Cascade)

  @@index([fecha])
  @@index([lote_id])
  @@index([material_id])
}

enum Sexo {
  MASCULINO
  FEMENINO
  OTRO
}

enum EstadoInventario {
  ACTIVO
  INACTIVO
  DESCONTINUADO
}
